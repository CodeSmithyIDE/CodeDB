// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CodeDBQueryService.proto

#include "CodeDBQueryService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace CodeSmithy {
class CodeDBQueryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeDBQueryRequest>
      _instance;
} _CodeDBQueryRequest_default_instance_;
class CodeDBQueryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CodeDBQueryResponse>
      _instance;
} _CodeDBQueryResponse_default_instance_;
}  // namespace CodeSmithy
namespace protobuf_CodeDBQueryService_2eproto {
void InitDefaultsCodeDBQueryRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::CodeSmithy::_CodeDBQueryRequest_default_instance_;
    new (ptr) ::CodeSmithy::CodeDBQueryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CodeSmithy::CodeDBQueryRequest::InitAsDefaultInstance();
}

void InitDefaultsCodeDBQueryRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodeDBQueryRequestImpl);
}

void InitDefaultsCodeDBQueryResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::CodeSmithy::_CodeDBQueryResponse_default_instance_;
    new (ptr) ::CodeSmithy::CodeDBQueryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CodeSmithy::CodeDBQueryResponse::InitAsDefaultInstance();
}

void InitDefaultsCodeDBQueryResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodeDBQueryResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CodeSmithy::CodeDBQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CodeSmithy::CodeDBQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CodeSmithy::CodeDBQueryRequest)},
  { 5, -1, sizeof(::CodeSmithy::CodeDBQueryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CodeSmithy::_CodeDBQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CodeSmithy::_CodeDBQueryResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CodeDBQueryService.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030CodeDBQueryService.proto\022\nCodeSmithy\"\024"
      "\n\022CodeDBQueryRequest\"\025\n\023CodeDBQueryRespo"
      "nseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 91);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CodeDBQueryService.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_CodeDBQueryService_2eproto
namespace CodeSmithy {

// ===================================================================

void CodeDBQueryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeDBQueryRequest::CodeDBQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CodeDBQueryService_2eproto::InitDefaultsCodeDBQueryRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CodeSmithy.CodeDBQueryRequest)
}
CodeDBQueryRequest::CodeDBQueryRequest(const CodeDBQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CodeSmithy.CodeDBQueryRequest)
}

void CodeDBQueryRequest::SharedCtor() {
  _cached_size_ = 0;
}

CodeDBQueryRequest::~CodeDBQueryRequest() {
  // @@protoc_insertion_point(destructor:CodeSmithy.CodeDBQueryRequest)
  SharedDtor();
}

void CodeDBQueryRequest::SharedDtor() {
}

void CodeDBQueryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CodeDBQueryRequest::descriptor() {
  ::protobuf_CodeDBQueryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CodeDBQueryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeDBQueryRequest& CodeDBQueryRequest::default_instance() {
  ::protobuf_CodeDBQueryService_2eproto::InitDefaultsCodeDBQueryRequest();
  return *internal_default_instance();
}

CodeDBQueryRequest* CodeDBQueryRequest::New(::google::protobuf::Arena* arena) const {
  CodeDBQueryRequest* n = new CodeDBQueryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CodeDBQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CodeSmithy.CodeDBQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CodeDBQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CodeSmithy.CodeDBQueryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CodeSmithy.CodeDBQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CodeSmithy.CodeDBQueryRequest)
  return false;
#undef DO_
}

void CodeDBQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CodeSmithy.CodeDBQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CodeSmithy.CodeDBQueryRequest)
}

::google::protobuf::uint8* CodeDBQueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CodeSmithy.CodeDBQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CodeSmithy.CodeDBQueryRequest)
  return target;
}

size_t CodeDBQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CodeSmithy.CodeDBQueryRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CodeDBQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CodeSmithy.CodeDBQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeDBQueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeDBQueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CodeSmithy.CodeDBQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CodeSmithy.CodeDBQueryRequest)
    MergeFrom(*source);
  }
}

void CodeDBQueryRequest::MergeFrom(const CodeDBQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CodeSmithy.CodeDBQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CodeDBQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CodeSmithy.CodeDBQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeDBQueryRequest::CopyFrom(const CodeDBQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CodeSmithy.CodeDBQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeDBQueryRequest::IsInitialized() const {
  return true;
}

void CodeDBQueryRequest::Swap(CodeDBQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeDBQueryRequest::InternalSwap(CodeDBQueryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CodeDBQueryRequest::GetMetadata() const {
  protobuf_CodeDBQueryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CodeDBQueryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CodeDBQueryResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CodeDBQueryResponse::CodeDBQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CodeDBQueryService_2eproto::InitDefaultsCodeDBQueryResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CodeSmithy.CodeDBQueryResponse)
}
CodeDBQueryResponse::CodeDBQueryResponse(const CodeDBQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CodeSmithy.CodeDBQueryResponse)
}

void CodeDBQueryResponse::SharedCtor() {
  _cached_size_ = 0;
}

CodeDBQueryResponse::~CodeDBQueryResponse() {
  // @@protoc_insertion_point(destructor:CodeSmithy.CodeDBQueryResponse)
  SharedDtor();
}

void CodeDBQueryResponse::SharedDtor() {
}

void CodeDBQueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CodeDBQueryResponse::descriptor() {
  ::protobuf_CodeDBQueryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CodeDBQueryService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CodeDBQueryResponse& CodeDBQueryResponse::default_instance() {
  ::protobuf_CodeDBQueryService_2eproto::InitDefaultsCodeDBQueryResponse();
  return *internal_default_instance();
}

CodeDBQueryResponse* CodeDBQueryResponse::New(::google::protobuf::Arena* arena) const {
  CodeDBQueryResponse* n = new CodeDBQueryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CodeDBQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CodeSmithy.CodeDBQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CodeDBQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CodeSmithy.CodeDBQueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CodeSmithy.CodeDBQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CodeSmithy.CodeDBQueryResponse)
  return false;
#undef DO_
}

void CodeDBQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CodeSmithy.CodeDBQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CodeSmithy.CodeDBQueryResponse)
}

::google::protobuf::uint8* CodeDBQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CodeSmithy.CodeDBQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CodeSmithy.CodeDBQueryResponse)
  return target;
}

size_t CodeDBQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CodeSmithy.CodeDBQueryResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CodeDBQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CodeSmithy.CodeDBQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CodeDBQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CodeDBQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CodeSmithy.CodeDBQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CodeSmithy.CodeDBQueryResponse)
    MergeFrom(*source);
  }
}

void CodeDBQueryResponse::MergeFrom(const CodeDBQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CodeSmithy.CodeDBQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CodeDBQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CodeSmithy.CodeDBQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CodeDBQueryResponse::CopyFrom(const CodeDBQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CodeSmithy.CodeDBQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CodeDBQueryResponse::IsInitialized() const {
  return true;
}

void CodeDBQueryResponse::Swap(CodeDBQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CodeDBQueryResponse::InternalSwap(CodeDBQueryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CodeDBQueryResponse::GetMetadata() const {
  protobuf_CodeDBQueryService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CodeDBQueryService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CodeSmithy

// @@protoc_insertion_point(global_scope)
